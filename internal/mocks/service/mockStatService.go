// Code generated by MockGen. DO NOT EDIT.
// Source: statService.go

// Package service is a generated GoMock package.
package service

import (
	reflect "reflect"

	gomock "github.com/golang/mock/gomock"
	dto "github.com/ldmi3i/tinkoff-invest-bot/internal/dto"
)

// MockStatService is a mock of StatService interface.
type MockStatService struct {
	ctrl     *gomock.Controller
	recorder *MockStatServiceMockRecorder
}

// MockStatServiceMockRecorder is the mock recorder for MockStatService.
type MockStatServiceMockRecorder struct {
	mock *MockStatService
}

// NewMockStatService creates a new mock instance.
func NewMockStatService(ctrl *gomock.Controller) *MockStatService {
	mock := &MockStatService{ctrl: ctrl}
	mock.recorder = &MockStatServiceMockRecorder{mock}
	return mock
}

// EXPECT returns an object that allows the caller to indicate expected use.
func (m *MockStatService) EXPECT() *MockStatServiceMockRecorder {
	return m.recorder
}

// GetAlgorithmStat mocks base method.
func (m *MockStatService) GetAlgorithmStat(req *dto.StatAlgoRequest) (*dto.StatAlgoResponse, error) {
	m.ctrl.T.Helper()
	ret := m.ctrl.Call(m, "GetAlgorithmStat", req)
	ret0, _ := ret[0].(*dto.StatAlgoResponse)
	ret1, _ := ret[1].(error)
	return ret0, ret1
}

// GetAlgorithmStat indicates an expected call of GetAlgorithmStat.
func (mr *MockStatServiceMockRecorder) GetAlgorithmStat(req interface{}) *gomock.Call {
	mr.mock.ctrl.T.Helper()
	return mr.mock.ctrl.RecordCallWithMethodType(mr.mock, "GetAlgorithmStat", reflect.TypeOf((*MockStatService)(nil).GetAlgorithmStat), req)
}
